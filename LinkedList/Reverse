// по ссылкам
public void Revert()
{
    if (root != null && root.next != null)
    {
        // Node temp = root;
        Revert(root.next, root);
        // temp.next = null;
    }
}

void Revert(Node currentNode, Node previousNode)
{
    if (currentNode == null)
    {
        root = currentNode;
    }
    else
    {
        Revert(currentNode.next, currentNode);
    }
    currentNode.next = previousNode;
    previousNode.next = null;
}

// по значениям
public void Reverce()
{
    if (root == null)
        return;

    int pivot = 0;

    if (size % 2 == 0)
        pivot = size / 2 - 1;
    else
        pivot = size / 2;

    for (int i = 0; i < pivot; i++)
    {
        SwapValue(i, size - i - 1);
    }
}

public void SwapValue(int index1, int index2)
{
    if (index1 == index2)
        return;
    if (index1 < 0 || index1 >= size || index1 < 0 || index2 >= size)
        return;

    Node node1 = null, node2 = null, currentNode = root;
    for (int i = 0; currentNode != null; i++)
    {
        if (index1 == i)
        {
            node1 = currentNode;
        }
        else if (index2 == i)
        {
            node2 = currentNode;
        }
        if (node2 != null && node1 != null)
            break;
        currentNode = currentNode.next;
    }
    int temp = node1.value;  // T temp, если дженерик
    node1.value = node2.value;
    node2.value = temp;
}

